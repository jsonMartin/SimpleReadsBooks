---
// Pre-render product pages
export function getStaticPaths() {
  return [
    { params: { id: "hunnie-bunnys-garden" } },
    { params: { id: "hunnie-bunnys-garden-mystery" } },
  ];
}

import Layout from "../../../layouts/Layout.astro";
import { getProduct } from "../../../data/productsStore";
import { Badge } from "flowbite-svelte";
import Carousel from "./_Carousel.svelte";
import ButtonAmazon from "../../../components/ButtonAmazon.svelte";
import ButtonBack from "../../../components/ButtonBack.svelte";
import { ExclamationCircleSolid } from "flowbite-svelte-icons";
import { wrapTextInParagraphTags } from "../../../helpers";

const { id } = Astro.params;
const product = getProduct(id!);
const isBook = product?.type === "book";
---

{
  product ? (
    <Layout title={product.title}>
      <div class="grid w-full grid-cols-1 items-center justify-center justify-items-center gap-4 sm:gap-1 md:grid-cols-2">
        <div
          id="carousel-wrapper"
          class="dark m-2 sm:m-6 md:m-10"
          transition:name={product.id}
        >
          <Carousel images={product.images} client:load />
        </div>

        <div class="sm:prose-xs prose prose-sm bg-gray-100 p-8 sm:m-5 sm:p-10 md:m-8 md:p-16 lg:m-10">
          <h1 class="text-2xl sm:text-3xl">{product.title}</h1>
          {product.disabled ? (
            <Badge color="red">Coming soon</Badge>
          ) : isBook ? (
            <div class="mt-[-20px] pt-0">
              <span class="align-middle text-xs font-light">Available in </span>
              <Badge color="green">Hardcover</Badge>
              <Badge color="green">Paperback</Badge>
              <Badge color="green">Kindle</Badge>
            </div>
          ) : null}
          <Fragment set:html={wrapTextInParagraphTags(product.description)} />
          <h2 class="mt-[5px] p-0">
            ${""}
            {product.price.toLocaleString("en-US", {
              style: "currency",
              currency: "USD",
            })}
          </h2>
          <div transition:name={"amazon-button" + product.id}>
            <ButtonAmazon
              fullWidth
              disabled={product.disabled}
              href={product.amazon_url}
            />
          </div>
        </div>
      </div>
    </Layout>
  ) : (
    <div class="pt-2 text-center">
      <h1 class="flex flex-row items-center justify-center text-center text-3xl text-red-500 sm:text-4xl">
        <ExclamationCircleSolid class="mr-2 inline-block h-6 w-6 sm:h-8 sm:w-8" />
        No product found
      </h1>
      <h6 class="text-md text-center">
        We couldn't find a match based on the provided product ID.
      </h6>
      <ButtonBack />
    </div>
  )
}
