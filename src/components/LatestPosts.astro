---
const { fullWidth = true } = Astro.props;
import { postImageImport } from "../helpers/images.mjs";

const latestPosts = (await Astro.glob("../pages/posts/*.mdx"))
  .sort(
    (a: any, b: any) =>
      new Date(b.frontmatter.publish_date) -
      new Date(a.frontmatter.publish_date),
  )
  .slice(0, 4);

import { Image } from "astro:assets";
---

<aside
  aria-label="Related articles"
  class={`mt-12 bg-gray-50 py-8 dark:bg-gray-800 dark:bg-opacity-80 lg:mt-0  ${
    !fullWidth ? "mx-auto max-w-screen-xl rounded-lg lg:py-12" : "lg:py-24"
  }`}
>
  <div class="mx-auto max-w-screen-xl px-4">
    <h2 class="mb-8 text-2xl font-bold text-gray-900 dark:text-white">
      Latest articles
    </h2>
    <div class="grid gap-12 sm:grid-cols-2 lg:grid-cols-4">
      {
        latestPosts.map(async (post) => {
          const { title, cover, slug, id, reading_time, description } =
            post.frontmatter;
          let coverImg = "";

          try {
            coverImg = (await postImageImport(cover)).default;
          } catch (e) {
            coverImg = "";
          }

          return (
            <article class="max-w-xs">
              {coverImg && (
                <a href={`/posts/${slug}`}>
                  <Image
                    src={coverImg}
                    class="mb-5 max-h-[127px] rounded-lg object-cover"
                    alt="Image 1"
                    width={452}
                    transition:name={!fullWidth ? `cover-image-${id}` : ""}
                    transition:animate="none"
                  />
                </a>
              )}
              <div
                transition:name={!fullWidth ? `cover-title-${id}` : ""}
                transition:animate="none"
              >
                <h2 class="mb-2 text-xl font-bold leading-tight text-gray-900 dark:text-white ">
                  <a href={`/posts/${slug}`}>{title}</a>
                </h2>
                <p class="mb-4 text-gray-500 dark:text-gray-400">
                  {(description !== "undefined" && description) || ""}
                </p>
                <a
                  href={`/posts/${slug}`}
                  class="inline-flex items-center font-medium text-primary-600 underline underline-offset-4 hover:no-underline dark:text-secondary-500"
                >
                  Read in {reading_time.replace(" read", "")}
                </a>
              </div>
            </article>
          );
        })
      }
    </div>
  </div>
</aside>
