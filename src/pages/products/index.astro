---
import Layout from "../../layouts/Layout.astro";
import { Card, Heading, Span } from "flowbite-svelte";
import ButtonAmazon from "../../components/ButtonAmazon.svelte";
import AvailableInFormat from "../../components/AvailableInFormat.svelte";
import { CldImage } from "@jsonmartin/svelte-cloudinary-astro";
import { products } from "../../data/productsStore";

console.log("Products:", products); // Logs on Server
---

<Layout title="Books & Products">
  <h1
    class="mt-4 text-center text-5xl font-bold sm:text-6xl md:mt-8 md:text-7xl"
  >
    Books
  </h1>
  <div
    class="mx-3 mt-4 grid grid-cols-1 justify-items-center gap-8 sm:mx-4 sm:mt-6 sm:grid-cols-2 sm:gap-4 md:mx-6 md:mt-10 md:grid-cols-3 md:gap-8"
  >
    {
      Object.values(products).map((product, i) => {
        return (
          <Card
            padding="none"
            class={
              "product-card h-fit cursor-pointer " +
              (product.disabled ? "disabled opacity-50" : "")
            }
            id={`product-${product.id}`}
          >
            <a
              id={`product-link-${product.id}`}
              href={"/products/" + product.id}
              class="flex items-center justify-center"
            >
              <img
                class="w-full rounded-t-lg object-cover"
                src={product.images[0].src}
                alt={"Product image" + i}
                loading="lazy"
                transition:name={product.id}
              />
            </a>
            <div class="px-5 py-5 pt-2">
              <h1 class="text-2xl font-semibold tracking-tight text-gray-900 dark:text-white">
                {product.title}
                <AvailableInFormat divClass="pt-0 -mt-[8px]" showText={false} />
              </h1>

              <p class="mt-1.5 text-sm text-gray-400 sm:mt-3">
                {product.description.split("\n")[0]}
              </p>

              <div class="mt-5 flex items-center justify-between">
                <span class="text-xl font-medium text-gray-900 dark:text-white">
                  ${""}
                  {product.price.toLocaleString("en-US", {
                    style: "currency",
                    currency: "USD",
                  })}
                </span>

                <div transition:name={"amazon-button" + product.id}>
                  <ButtonAmazon
                    size="xs"
                    stopPropagation={true}
                    disabled={product.disabled}
                    client:load
                  />
                </div>
              </div>
            </div>
          </Card>
        );
      })
    }
  </div>

  <h1
    class="mb-4 mt-4 text-center text-5xl font-bold sm:text-6xl md:mt-10 md:text-7xl lg:mb-8"
  >
    Products
  </h1>
  <Heading
    tag="h1"
    class="mb-0 animate-bounce text-center"
    customSize="text-2xl font-extrabold sm:text-4xl md:text-5xl"
  >
    <Span gradient>Coming soon...</Span>
  </Heading>
  <CldImage
    width={2100}
    height="100%"
    aspectRatio={2100 / 1500}
    src="hunnie-bunny-reading-a-book-to-mr-squirrel"
    quality={80}
    class="!-mt-4 !mb-0 block !h-[100%] w-full !object-contain !p-1 !pb-0 sm:!-mt-8 sm:!p-8 md:!-mb-20 md:!-mt-24 md:!p-24"
  />
</Layout>

<script>
  const addProductLinkClickHandlers = () => {
    let productCards = Array.from(
      document.getElementsByClassName("product-card"),
    );

    productCards.forEach((card) => {
      const link = card.querySelector("a");
      card.addEventListener("click", (ev) => {
        if (!ev.isTrusted) return; // Filter out click events being sent twice for some reason
        if (card.classList.contains("disabled")) {
          ev.stopPropagation();
          ev.preventDefault();
          alert("Product not available.\n\nComing soon!");
          return;
        }

        console.log("event:", ev);
        console.log("Clicked product card", card.id, card);
        link.click();
      });
    });
  };

  document.addEventListener("astro:page-load", addProductLinkClickHandlers);
</script>
