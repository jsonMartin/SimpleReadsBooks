---
// Pre-render product pages
export function getStaticPaths() {
  return [{ params: { id: 'hunnie-bunnys-garden' } }, { params: { id: 'hunnie-bunnys-garden-mystery' } }];
}

import Layout from '../../../layouts/Layout.astro';
import { getProduct } from '../../../data/productsStore';
import { Badge } from 'flowbite-svelte';
import Carousel from './_Carousel.svelte';
import ButtonAmazon from '../../../components/ButtonAmazon.svelte';
import ButtonBack from '../../../components/ButtonBack.svelte';
import { ExclamationCircleSolid } from 'flowbite-svelte-icons';
import { wrapTextInParagraphTags } from '../../../helpers';

const { id } = Astro.params;
const product = getProduct(id!);
const isBook = product?.type === 'book';
---

{
  product ? (
    <Layout title={product.title}>
      <div class="grid grid-cols-1 md:grid-cols-2 gap-4 sm:gap-1 w-full justiy-center items-center justify-items-center">
        <div
          id="carousel-wrapper"
          class="dark m-2 sm:m-6 md:m-10"
          transition:name={product.id}
        >
          <Carousel
            images={product.images}
            client:load
          />
        </div>

        <div class="bg-gray-100 p-8 sm:p-10 md:p-16 prose prose-sm sm:prose-xs sm:m-5 md:m-8 lg:m-10">
          <h1 class="text-2xl sm:text-3xl">{product.title}</h1>
          {product.disabled ? (
            <Badge color="red">Coming soon</Badge>
          ) : isBook ? (
            <div class="pt-0 mt-[-20px]">
              <span class="text-xs font-light align-middle">Available in </span>
              <Badge color="green">Hardcover</Badge>
              <Badge color="green">Paperback</Badge>
              <Badge color="green">Kindle</Badge>
            </div>
          ) : null}
          <Fragment set:html={wrapTextInParagraphTags(product.description)} />
          <h2 class="p-0 mt-[5px]">${product.price.toLocaleString('en-US', { style: 'currency', currency: 'USD' })}</h2>
          <div transition:name={'amazon-button' + product.id}>
            <ButtonAmazon
              fullWidth
              disabled={product.disabled}
            />
          </div>
        </div>
      </div>
    </Layout>
  ) : (
    <div class="text-center pt-2">
      <h1 class="text-3xl sm:text-4xl text-center text-red-500 flex flex-row justify-center items-center">
        <ExclamationCircleSolid class="inline-block w-6 h-6 sm:w-8 sm:h-8 mr-2" />
        No product found
      </h1>
      <h6 class="text-md text-center">We couldn't find a match based on the provided product ID.</h6>
      <ButtonBack />
    </div>
  )
}
