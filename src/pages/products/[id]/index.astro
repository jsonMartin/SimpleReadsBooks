---
// Pre-render product pages
export function getStaticPaths() {
  return [
    { params: { id: 'hunnie-bunnys-garden' } },
    // { params: { id: "1" } },
    // { params: { id: "2" } },
    // { params: { id: "3" } }
  ];
}

import Layout from '../../../layouts/Layout.astro';
import { getProduct } from '../../../data/productsStore';
import { Badge } from 'flowbite-svelte';
import Carousel from './_Carousel.svelte';
import ButtonAmazon from '../../../components/ButtonAmazon.svelte';
import ButtonBack from '../../../components/ButtonBack.svelte';
import { ExclamationCircleSolid } from 'flowbite-svelte-icons';
import { wrapTextInParagraphTags } from '../../../helpers';

const { id } = Astro.params;
const product = getProduct(id!);
const isBook = product?.type === 'book';
---

<!--
          // <Carousel
          //   client:load
          //   images={product.images}
          //   showCaptions={false}
          //   showIndicators={false}
          //   classSlide="flex items-center justify-center h-[100%] w-[100%] !rounded-none !bg-transparent"
          //   classDiv="w-[100%] !h-[300px] sm:!h-[400px] !rounded-none !bg-transparent"
          //   classImg="!bg-none rounded-md animate-[fadeIn_.2s_ease-in-out_1] h-full"
          //   classThumb="p-0 rounded-md shadow-xl hover:outline hover:outline-primary-500"
          //   classThumbDiv="bg-transparent"
          //   thumbBtnClass="m-2"
          //   indicatorDivClass="bg-gray-500"
          //   indicatorClass="bg-purple-500"
          // /> --><!-- ID: {id} --><!-- product: {JSON.stringify(product)} -->{
  product ? (
    <Layout title={product.title}>
      <div class="grid grid-cols-1 md:grid-cols-2 gap-4 sm:gap-1 w-full justiy-center items-center justify-items-center">
        <div
          id="carousel-wrapper"
          class="dark m-2 sm:m-6 md:m-10"
        >
          <Carousel
            images={product.images}
            client:load
          />
        </div>

        <div class="bg-gray-100 p-8 sm:p-10 md:p-16 prose prose-sm sm:prose-xs sm:m-5 md:m-8 lg:m-10">
          <h1 class="text-2xl sm:text-3xl">{product.title}</h1>

          {isBook ? (
            <div class="pt-0 mt-[-20px]">
              <span class="text-xs font-light align-middle">Available in </span>
              <Badge color="green">Hardcover</Badge>
              <Badge color="green">Paperback</Badge>
              <Badge color="green">Kindle</Badge>
            </div>
          ) : null}

          <Fragment set:html={wrapTextInParagraphTags(product.description)} />

          <h2 class="p-0 mt-[5px]">${product.price.toLocaleString('en-US', { style: 'currency', currency: 'USD' })}</h2>

          <ButtonAmazon fullWidth />
        </div>
      </div>
    </Layout>
  ) : (
    <div class="text-center pt-2">
      <h1 class="text-3xl sm:text-4xl text-center text-red-500 flex flex-row justify-center items-center">
        <ExclamationCircleSolid class="inline-block w-6 h-6 sm:w-8 sm:h-8 mr-2" />
        No product found
      </h1>
      <h6 class="text-md text-center">We couldn't find a match based on the provided product ID.</h6>
      <ButtonBack />
    </div>
  )
}
